# Author: Fabi Liria
name: CI QA

on:
  push:
    branches:
      - QA

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    outputs:
      should_create_pr: ${{ steps.check.outputs.should_create_pr }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check commit message
        id: check
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Last commit message: $COMMIT_MESSAGE"
          if echo "$COMMIT_MESSAGE" | grep -q "Production transition:"; then
            echo "::set-output name=should_create_pr::true"
          else
            echo "::set-output name=should_create_pr::false"
          fi

  create-pull-request:
    runs-on: ubuntu-latest
    needs: check-commit-message
    if: needs.check-commit-message.outputs.should_create_pr == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Pull Request to Production
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: Production
          branch: QA
          title: "Automated PR from QA to Production"
          body: "This is an automated pull request created from the QA branch to Production."

  merge-pull-request:
    runs-on: ubuntu-latest
    needs: create-pull-request
    if: needs.create-pull-request.outputs.pull-request-url != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge pull request
        run: |
          PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            | jq -r '.[] | select(.head.ref=="QA" and .base.ref=="Production") | .number')
          if [ -n "$PR_NUMBER" ]; then
            curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              -X PUT \
              https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge \
              -d '{"merge_method":"merge"}'
          else
            echo "No PR found to merge"
          fi